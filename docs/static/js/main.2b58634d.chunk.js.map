{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/rootReducer.js","store/store.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","id","Date","getTime","title","start","moment","toDate","end","add","bgcolor","notes","user","_id","name","activeEvent","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","LoginScreen","className","placeholder","value","Navbar","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","uiOpenModal","eventClearActiveEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","nowPlus1","clone","initEvent","CalendarModal","useSelector","dispatch","useDispatch","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","eventAddNew","onChange","minDate","autoComplete","rows","AddNewFab","onClick","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","localStorage","getItem","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","view","components","AppRouter","exact","path","component","to","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b58634d.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import moment from 'moment';\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    events: [{\n        id: new Date().getTime(),\n        title: 'CumpleaÃ±os del jefe',\n        start: moment().toDate(),\n        end: moment().add( 2, 'hours' ).toDate(),\n        bgcolor: '#fafafa',\n        notes: 'Comprar el pastel',\n        user: {\n            _id: '123',\n            name: 'Gonzalo'\n        }\n    }],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer\n    // TODO: AuthReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import React from 'react';\nimport './login.css';\n\nexport const LoginScreen = () => {\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"ContraseÃ±a\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"ContraseÃ±a\" \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseÃ±a\" \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport const Navbar = () => {\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                Pedro\n            </span>\n            \n            <button className=\"btn btn-outline-danger\">\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el dÃ­a',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'DÃ­a',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver mÃ¡s (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import { types } from \"../types/types\";\n\n\n\nexport const eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventDeleted = () => ({ type: types.eventDeleted });\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventAddNew, eventClearActiveEvent, eventUpdated } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventUpdated( formValues ) )\n        } else {\n            dispatch( eventAddNew({\n                ...formValues,\n                id: new Date().getTime(),\n                user: {\n                    _id: '123',\n                    name: 'Gonzalo'\n                }\n            }) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"TÃ­tulo del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripciÃ³n corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">InformaciÃ³n adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventDeleted() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor: '#367CF7',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\n\nexport const AppRouter = () => {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path=\"/login\" component={ LoginScreen } />      \n                    <Route exact path=\"/\" component={ CalendarScreen } />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}